@model BookManager.Context.Book

@{
    ViewBag.Title = "Add/Edit Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .error {
        color: red;
    }
</style>

<h3>Add/Edit Book</h3> 

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@using (Html.BeginForm("AddBook", "Book", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">



        @* Title Field *@
        <div class="form-group">
            @Html.HiddenFor(model => model.ID)
            <label>Title</label>
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "error" })
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
        </div>



        @* Author Field *@
        <div class="form-group">
            <label>Author</label>
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "error" })
            @Html.TextBoxFor(model => model.Author, new { @class = "form-control" })

        </div>



        @* Price Field *@
        <div class="form-group">
            <label>Price</label>
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "error" })
            @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", step = "0.01" })

        </div>




        @* Published Date Field *@
        <div class="form-group">
            <label>Published Date</label>
            @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "error" })
            @Html.TextBoxFor(model => model.PublishedDate, new { @class = "form-control", type = "date" })

        </div>



        <button type="submit" class="btn btn-primary">Submit</button>
        <button type="submit" class="btn btn-primary">Clear</button>
        <a href="@Url.Action("BookList", "Book")" class="btn btn-success">BookList</a>

    </div>
}
